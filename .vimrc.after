"""""""""""""""""
" Misc settings "
"_______________"
set t_Co=256                    " make it shiny
set wrap                        " wrap long lines
set undolevels=1000             " forgivable mistakes
filetype on                     " filetype detection on
filetype plugin on              " load filetype specific plugins
filetype plugin indent on       " load filetype specific indent plugins

" following lines not needed because of erlang folding
"set foldenable                  " enable code folding
"set foldmethod=indent           " setting foldmethod
"set foldnestmax=1               " set maximum depth of folding (i hate nested folding)
set smarttab                    " smart tab
set expandtab                   " spaces not tabs
set tabstop=4                   " 4 spaces tabstop
set softtabstop=4               " 4 spaces softtabstop
set shiftwidth=4                " 4 spaces indent
syntax on

""""""""""""""
" Set colors "
"____________"
colorscheme molokai
set cursorline                  " highlight current line of the cursor
set colorcolumn=81              " mark lines with 80+ chars (keep em short)

"""""""""""""""""""""""""""""""""
" Enable Powerline 'fancy' mode "
"_______________________________"
let g:Powerline_symbols = 'fancy'

""""""""""
" Erlang "
"________"
"
" completion
let g:erlangManPath='/usr/local/lib/erlang/man' " path of erlang manual for completion purposes
let g:erlangCompletion='grep'
let g:erlangCompletionDisplatDoc=1
set completeopt=longest,menuone
"
" folding
let g:erlang_folding=1                                      "NOT let g:erlangFold=1
" map space to za in silent mode
nnoremap <silent> <Space> @=(foldlevel('.')?'za':'1')<CR>
vnoremap <Space> zf

""""""""""
" Python "
"________"
"
" recognizing *.py as python-file
au BufNewFile,BufReadPost *.py set filetype=python

"""""""""
" LaTeX "
"_______"
let g:tex_flavor='latex'
let g:Tex_DefaultTargetFormat='pdf'

""""""""""""
" Mappings "
"__________"
"
" Mapping :CtrlPBuffer to C-b
map <C-b> :CtrlPBuffer<CR>
